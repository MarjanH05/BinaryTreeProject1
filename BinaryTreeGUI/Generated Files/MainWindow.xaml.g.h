
//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#pragma once

#include <unknwn.h>

// Undefine GetCurrentTime macro to prevent
// conflict with Storyboard::GetCurrentTime
#undef GetCurrentTime

#if __has_include(<winrt/Microsoft.UI.Xaml.h>)
#include <winrt/Microsoft.UI.Xaml.h>
#endif
#if __has_include(<winrt/Microsoft.UI.Xaml.Controls.h>)
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#endif
#if __has_include(<winrt/Microsoft.UI.Xaml.Controls.Primitives.h>)
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#endif
#if __has_include(<winrt/Microsoft.UI.Xaml.Markup.h>)
#include <winrt/Microsoft.UI.Xaml.Markup.h>
#endif


namespace winrt::BinaryTreeGUI::implementation
{
    using IInspectable = ::winrt::Windows::Foundation::IInspectable;

    template <typename D, typename ... I>
    struct MainWindowT : public ::winrt::BinaryTreeGUI::implementation::MainWindow_base<D,
        ::winrt::Microsoft::UI::Xaml::Markup::IComponentConnector,
        I...>
    {
        using base_type = typename MainWindowT::base_type;
        using base_type::base_type;
        using class_type = typename MainWindowT::class_type;

        void InitializeComponent();
        virtual void Connect(int32_t connectionId, IInspectable const& target);
        virtual ::winrt::Microsoft::UI::Xaml::Markup::IComponentConnector GetBindingConnector(int32_t connectionId, IInspectable const& target);
        void UnloadObject(::winrt::Microsoft::UI::Xaml::DependencyObject const& dependencyObject);
        void DisconnectUnloadedObject(int32_t connectionId);

        ::winrt::Microsoft::UI::Xaml::Controls::Button ProcessButton()
        {
            return _ProcessButton;
        }
        void ProcessButton(::winrt::Microsoft::UI::Xaml::Controls::Button value)
        {
            _ProcessButton = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::TextBlock StatusText()
        {
            return _StatusText;
        }
        void StatusText(::winrt::Microsoft::UI::Xaml::Controls::TextBlock value)
        {
            _StatusText = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::StackPanel ResultsPanel()
        {
            return _ResultsPanel;
        }
        void ResultsPanel(::winrt::Microsoft::UI::Xaml::Controls::StackPanel value)
        {
            _ResultsPanel = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::TextBox OutputFileTextBox()
        {
            return _OutputFileTextBox;
        }
        void OutputFileTextBox(::winrt::Microsoft::UI::Xaml::Controls::TextBox value)
        {
            _OutputFileTextBox = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::TextBox InputFileTextBox()
        {
            return _InputFileTextBox;
        }
        void InputFileTextBox(::winrt::Microsoft::UI::Xaml::Controls::TextBox value)
        {
            _InputFileTextBox = value;
        }
        
    protected:
        bool _contentLoaded{false};

    private:
        struct MainWindow_obj1_Bindings;

        ::winrt::Microsoft::UI::Xaml::Controls::Button _ProcessButton{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::TextBlock _StatusText{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::StackPanel _ResultsPanel{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::TextBox _OutputFileTextBox{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::TextBox _InputFileTextBox{nullptr};
    };
}

